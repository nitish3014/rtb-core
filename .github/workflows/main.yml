name: CI Build Core

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  S3_BUCKET_NAME: rtb-dev-artifact
  S3_ARTIFACT_KEY: greenlight-rct-core-0.0.1-SNAPSHOT.jar

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Notify Build Start
        continue-on-error: true
        run: |
          set +e
          commit_details=$(git log -1 --pretty=format:'%s|%an')
          commit_message=${commit_details%%|*}
          committer_name=${commit_details##*|}
          read -r -d '' payload <<EOF
{"text":"üöÄ *Build Started*
*Repo:* ${GITHUB_REPOSITORY}
*Run #:* ${GITHUB_RUN_NUMBER}
*Commit:* ${commit_message}
*By:* ${committer_name}
*URL:* ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"}
EOF
          echo ">>> START PAYLOAD:"
          echo "$payload"
          curl -v -X POST -H "Content-Type: application/json" \
               --data "$payload" \
               "${{ secrets.GOOGLE_CHAT_WEBHOOK }}" || true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Debug AWS identity
        run: |
          aws sts get-caller-identity || echo "‚ùå No AWS creds available"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Clean & Build
        run: ./gradlew clean build -x test

      - name: Publish Artifact to S3
        run: |
          aws s3 cp build/libs/*.jar s3://${{ env.S3_BUCKET_NAME }}/${{ env.S3_ARTIFACT_KEY }}

      - name: Notify Build Result
        if: always()
        continue-on-error: true
        run: |
          set +e
          if [[ "${{ job.status }}" == "success" ]]; then
            status="‚úÖ Build Success"
          else
            status="‚ùå Build Failure"
          fi
          read -r -d '' result_payload <<EOF
{"text":"${status}
*Repo:* ${GITHUB_REPOSITORY}
*Run #:* ${GITHUB_RUN_NUMBER}
*URL:* ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"}
EOF
          echo ">>> RESULT PAYLOAD:"
          echo "$result_payload"
          curl -v -X POST -H "Content-Type: application/json" \
               --data "$result_payload" \
               "${{ secrets.GOOGLE_CHAT_WEBHOOK }}" || true
