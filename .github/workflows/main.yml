name: CI Build Core

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  S3_BUCKET_NAME: rtb-dev-artifact
  S3_ARTIFACT_KEY: greenlight-rct-core-0.0.1-SNAPSHOT.jar

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      # ──── CHECKOUT CODE ────
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1  # Only fetch the most recent commit

      # ──── BUILD NOTIFICATION ────
      - name: Notify Build Start
        id: notify_start
        continue-on-error: true
        run: |
          set +e
          # grab last commit info
          commit_details=$(git log -1 --pretty=format:'%s|%an')
          commit_message=${commit_details%%|*}
          committer_name=${commit_details##*|}
          build_name="${GITHUB_REPOSITORY}"
          build_number="${GITHUB_RUN_NUMBER}"
          build_url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          # payload
          read -r -d '' payload <<EOF
          {
            "text": "🚀 *Build Started*\n*Repository:* ${build_name}\n*Run #:* ${build_number}\n*Trigger Commit:* ${commit_message}\n*By:* ${committer_name}\n*URL:* ${build_url}"
          }
          EOF
          # fire off, but don’t fail build if this errors
          curl -X POST -H 'Content-Type: application/json' \
            --data "$payload" \
            "${{ secrets.GOOGLE_CHAT_WEBHOOK }}" || true

      # ──── AWS CONFIGURATION ────
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # ──── BUILD WITH GRADLE ────
      - name: Clean & Build
        run: |
          ./gradlew clean build -x test || {
            echo "Build failed"
            exit 1
          }

      # ──── ARTIFACT UPLOAD ────
      - name: Publish Artifact to S3
        run: |
          # Find the built JAR file
          JAR_FILE=$(find build/libs -name '*.jar' | head -1)
          
          if [ -z "$JAR_FILE" ]; then
            echo "Error: No JAR file found in build/libs/"
            exit 1
          fi
          
          echo "Uploading $JAR_FILE to S3"
          aws s3 cp "$JAR_FILE" "s3://${{ env.S3_BUCKET_NAME }}/${{ env.S3_ARTIFACT_KEY }}"

      # ──── RESULT NOTIFICATION ────
      - name: Notify Build Result
        if: always()
        continue-on-error: true
        run: |
          set +e
          # success vs failure
          if [ "${{ job.status }}" = "success" ]; then
            build_status="✅ Succeeded"
          else
            build_status="❌ Failed"
          fi
          commit_details=$(git log -1 --pretty=format:'%s|%an')
          commit_message=${commit_details%%|*}
          committer_name=${commit_details##*|}
          build_name="${GITHUB_REPOSITORY}"
          build_number="${GITHUB_RUN_NUMBER}"
          build_url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          read -r -d '' result_payload <<EOF
          {
            "text": "🔔 *Build Completed*\n*Repository:* ${build_name}\n*Run #:* ${build_number}\n*Status:* ${build_status}\n*Trigger Commit:* ${commit_message}\n*By:* ${committer_name}\n*URL:* ${build_url}"
          }
          EOF
          curl -X POST -H 'Content-Type: application/json' \
            --data "$result_payload" \
            "${{ secrets.GOOGLE_CHAT_WEBHOOK }}" || true
